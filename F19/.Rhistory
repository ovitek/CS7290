require(RCurl)
ch07ta01.file <- getURL("https://netfiles.umn.edu/users/nacht001/www/nachtsheim/5th/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt", ssl.verifypeer=FALSE)
X <- read.table(textConnection(ch07ta01.file), sep='')
dimnames(X)[[2]] <- c('skinfold', 'thigh', 'midarm', 'fat')
head(X)
ch07ta01.file <- getURL("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt", ssl.verifypeer=FALSE)
X <- read.table(textConnection(ch07ta01.file), sep='')
dimnames(X)[[2]] <- c('skinfold', 'thigh', 'midarm', 'fat')
head(X)
lm2 <- lm(fat ~ skinfold, data=X)
summary(lm2)
pairs(X)
anova(lm2,lm3, data=X)
lm2 <- lm(fat ~ skinfold, data=X)
summary(lm2)
lm(fat ~ skinfold + thigh+skinfold*thigh, data=X)
summary(lm(fat ~ skinfold + thigh+skinfold*thigh, data=X))
lm4 <- lm(fat ~ skinfold + thigh, data=X)
summary(lm4)
corr(X$thigh, X$thigh^2)
cor(X$thigh, X$thigh^2)
cor(X$skinfold, X$skinfold^2)
summary(lm(fat ~ skinfold + skinfold^2, data=X))
summary(lm(fat ~ skinfold + I(skinfold^2), data=X))
X
lm5 <- lm(fat ~ skinfold+thigh+midarm, data=X1)
summary(lm5)
lm4 <- lm(fat ~ skinfold+thigh+midarm, data=X)
summary(lm4)
lm2 <- lm(fat ~ skinfold, data=X)
summary(lm2)
lm4 <- lm(fat ~ skinfold + thigh, data=X)
summary(lm4)
lm4 <- lm(fat ~ skinfold+thigh+midarm, data=X)
summary(lm4)
lm4 <- lm(fat ~ skinfold + thigh, data=X)
summary(lm4)
12*5
ch10ta01.file <- getURL("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2010%20Data%20Sets/CH10TA01.txt", ssl.verifypeer=FALSE)
X <- read.table(textConnection(ch10ta01.file), sep='')
dimnames(X)[[2]] <- c('income', 'risk', 'insurance')
lm1 <- lm(insurance ~ income+risk, data=X)
summary(lm1)
par(mfrow=c(2,2))
plot(X$income, X$insurance, xlab='Income', ylab='Insurance', cex.axis=1.2, cex.lab=1.5)
plot(X$risk, X$insurance, xlab='Risk', ylab='Insurance', cex.axis=1.2, cex.lab=1.5)
plot(X$income, lm1$res, xlab='Income', ylab='Residuals', cex.axis=1.2, cex.lab=1.5)
plot(lm(income~risk, data=X)$res, lm(insurance~risk, data=X)$res,
xlab='e(Income|Risk)', ylab='e(Insurance|Risk)', cex.axis=1.2, cex.lab=1.5)
source('~/Documents/GitHub/CS7290/F19/build_site.R')
source('~/Documents/GitHub/CS7290/F19/build_site.R')
source('~/Documents/GitHub/CS7290/F19/build_site.R')
source('~/Documents/GitHub/CS7290/F19/build_site.R')
source('~/Documents/GitHub/CS7290/F19/build_site.R')
1350/1800
1800-1350
source('~/Documents/GitHub/CS7290/F19/build_site.R')
2200*0.96
2200*0.94
2200*0.25
1675*0.94
1800*1.03
1900*1.03
1741300*1.12
1741300*1.12*0.97
1900000*0.25
1741300*1.12
7*(1-0.3-0.2)
1741300*1.12*1.03
150*4000
600000
100*4000
source('~/Documents/GitHub/CS7290/F19/build_site.R')
source('~/Documents/GitHub/CS7290/F19/build_site.R')
source('~/Documents/GitHub/CS7290/F19/build_site.R')
source('~/Documents/GitHub/CS7290/F19/build_site.R')
source('~/Documents/GitHub/CS7290/F19/build_site.R')
install.packages("gmodels")
source('~/Documents/GitHub/CS7290/F19/build_site.R')
source('~/Documents/GitHub/CS7290/F19/build_site.R')
install.packages("data.table")
require(RCurl)
data71 <- getURL("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt",
ssl.verifypeer=FALSE)
data71
?getURL
data71<-fread(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"))
data71<-read.txt(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"))
data71<-read.csv(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"))
data71
data71<-read.csv(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"), header=FALSE)
data71
dim(data71)
data71<-read.csv(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"), header=FALSE, sep=" ")
dim(data71)
data71
data71<-read.csv(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"), header=FALSE, sep="\t")
data71
?read.csv
data71<-read.csv(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"), header=FALSE, sep="")
data71
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(ggplot2)
library(dplyr)
require(RCurl)
data71<-read.csv(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"), header=FALSE, sep="")
colnames(data71)<-c("Triceps","Thigh","Midarm","Bodyfat")
data71
dim(data71)
data71[,4]
dim(data71[,4])
length(data71[,4])
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(ggplot2)
library(dplyr)
data71<-read.csv(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"), header=FALSE, sep="")
colnames(data71)<-c("Triceps","Thigh","Midarm","Bodyfat")
y<-data71[,4]
x<-data71[,1]
fit2<-linear.regression.multi(y,x)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(ggplot2)
library(dplyr)
data71<-read.csv(url("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt"), header=FALSE, sep="")
colnames(data71)<-c("Triceps","Thigh","Midarm","Bodyfat")
linear.regression.multi<-function(y,x){
#p-value and p.partial are similar, two different way to calculate
x$intercept<-rep(1,nrow(x))
x<-as.matrix(x)
y<-as.matrix(y)
beta<-solve(t(x)%*%x)%*%t(x)%*%y
e<-y-x%*%beta#residuals
df.e<-nrow(x)-ncol(x)#degree of freedoms,Error
df.t<-nrow(x)-1#degree of freedoms, Total
df.m<-ncol(x)-1#degree of freedoms, Model
SSE<-sum(e^2)
SST<-sum((y-mean(y))^2)
SSM<-sum((x%*%beta-mean(y))^2)
MSE<-SSE/df.e
beta.var<-diag(MSE*solve(t(x)%*%x))
t<-beta/sqrt(beta.var)
print(t)
p<-(1-pt(abs(t),df.e))*2
r.sq<-1-SSE/SST
p.partial<-NULL
for(i in 1:df.m){
#build reduced model, comare with full model
x.r<-x[,-i]
beta.r<-solve(t(x.r)%*%x.r)%*%t(x.r)%*%y
e.r<-y-x.r%*%beta.r
df.er<-nrow(x.r)-ncol(x.r)
df.mr<-ncol(x.r)-1
SSE.r<-sum(e.r^2)
SSM.r<-sum((x.r%*%beta.r-mean(y))^2)
f<-((SSM-SSM.r)/1)/MSE
p.partial[i]<-1-pf(abs(f),df1 = 1,df2 = df.e)
}
return(list(beta,sqrt(beta.var),t,p,p.partial,c(SSE,SST,SSM),r.sq,e))
}
y<-data71[,4]
x<-data71[,1:3]
fit<-linear.regression.multi(y,x)
fit.check<-lm(Bodyfat~Triceps+Thigh+Midarm,data71)
print("Model Parameter")
print(fit[[1]])
print("Standard Error")
print(fit[[2]])
print("t-Statistics")
print(fit[[3]])
print("P-value")
print(fit[[4]])
print("R-Square")
print(fit[[7]])
y<-data71[,4]
x<-data71[,1]
fit2<-linear.regression.multi(y,x)
data71 <- fread("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt")
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(ggplot2)
library(dplyr)
data71 <- fread("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt")
colnames(data71)<-c("Triceps","Thigh","Midarm","Bodyfat")
data71
data71
data71[[4]]
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(ggplot2)
library(dplyr)
data71 <- fread("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt")
colnames(data71)<-c("Triceps","Thigh","Midarm","Bodyfat")
linear.regression.multi<-function(y,x){
#p-value and p.partial are similar, two different way to calculate
x$intercept<-rep(1,nrow(x))
x<-as.matrix(x)
y<-as.matrix(y)
beta<-solve(t(x)%*%x)%*%t(x)%*%y
e<-y-x%*%beta#residuals
df.e<-nrow(x)-ncol(x)#degree of freedoms,Error
df.t<-nrow(x)-1#degree of freedoms, Total
df.m<-ncol(x)-1#degree of freedoms, Model
SSE<-sum(e^2)
SST<-sum((y-mean(y))^2)
SSM<-sum((x%*%beta-mean(y))^2)
MSE<-SSE/df.e
beta.var<-diag(MSE*solve(t(x)%*%x))
t<-beta/sqrt(beta.var)
print(t)
p<-(1-pt(abs(t),df.e))*2
r.sq<-1-SSE/SST
p.partial<-NULL
for(i in 1:df.m){
#build reduced model, comare with full model
x.r<-x[,-i]
beta.r<-solve(t(x.r)%*%x.r)%*%t(x.r)%*%y
e.r<-y-x.r%*%beta.r
df.er<-nrow(x.r)-ncol(x.r)
df.mr<-ncol(x.r)-1
SSE.r<-sum(e.r^2)
SSM.r<-sum((x.r%*%beta.r-mean(y))^2)
f<-((SSM-SSM.r)/1)/MSE
p.partial[i]<-1-pf(abs(f),df1 = 1,df2 = df.e)
}
return(list(beta,sqrt(beta.var),t,p,p.partial,c(SSE,SST,SSM),r.sq,e))
}
y<-data71[,4]
x<-data71[,1:3]
fit<-linear.regression.multi(y,x)
fit.check<-lm(Bodyfat~Triceps+Thigh+Midarm,data71)
print("Model Parameter")
print(fit[[1]])
print("Standard Error")
print(fit[[2]])
print("t-Statistics")
print(fit[[3]])
print("P-value")
print(fit[[4]])
print("R-Square")
print(fit[[7]])
y<-data71[,4]
x<-data71[,1]
fit2<-linear.regression.multi(y,x)
fit2.check<-lm(Bodyfat~Triceps,data71)
print("Model Parameter")
print(fit2[[1]])
print("Standard Error")
print(fit2[[2]])
print("t-Statistics")
print(fit2[[3]])
print("P-value")
print(fit2[[4]])
print("R-Square")
print(fit2[[7]])
SSE.f<-fit[[6]][1]
SSE.r<-fit2[[6]][1]
f<-((SSE.r-SSE.f)/2)/(SSE.f/16)
p<-1-pf(f,df1 = 2,df2 = 16)
print(p)
#use anova to double check
anova(fit.check,fit2.check)
y<-data71[[4]]
x<-data71[[1]]
x.new<-ifelse(x<19,0,ifelse(x<21,1,ifelse(x<23,2,ifelse(x<25,3,ifelse(x<27,4,ifelse(x<29,5,ifelse(x<31,6,7)))))))#create 8 levels of x
x.new<-ifelse(x<19,0,ifelse(x<21,1,ifelse(x<23,2,ifelse(x<25,3,ifelse(x<27,4,ifelse(x<29,5,ifelse(x<31,6,7)))))))
cut(x, breaks = c(19, 21, 23, 25, 27, 29, 31))
table(cut(x, breaks = c(19, 21, 23, 25, 27, 29, 31)))
x.new<-ifelse(x<19,0,ifelse(x<21,1,ifelse(x<23,2,ifelse(x<25,3,ifelse(x<27,4,ifelse(x<29,5,ifelse(x<31,6,7)))))))
table(x.new)
table(cut(x, breaks = c(19, 21, 23, 25, 27, 29, 31)), include.lowest=TRUE)
table(cut(x, breaks = c(19, 21, 23, 25, 27, 29, 31)))
summary(X)
summary(x)
table(cut(x, breaks = c(19, 21, 23, 25, 27, 29, 31, 32)))
table(x.new)
y<-data71[[4]]
x<-data71[[1]]
x.new<-cut(x, breaks = c(19, 21, 23, 25, 27, 29, 31, 32))
d<-data.frame(x.new,y)
d
d<-left_join(d,d%>%group_by(x.new)%>%summarise(y_hat=mean(y)))
x.new
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(ggplot2)
library(dplyr)
data71 <- fread("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt")
colnames(data71)<-c("Triceps","Thigh","Midarm","Bodyfat")
linear.regression.multi<-function(y,x){
#p-value and p.partial are similar, two different way to calculate
x$intercept<-rep(1,nrow(x))
x<-as.matrix(x)
y<-as.matrix(y)
beta<-solve(t(x)%*%x)%*%t(x)%*%y
e<-y-x%*%beta#residuals
df.e<-nrow(x)-ncol(x)#degree of freedoms,Error
df.t<-nrow(x)-1#degree of freedoms, Total
df.m<-ncol(x)-1#degree of freedoms, Model
SSE<-sum(e^2)
SST<-sum((y-mean(y))^2)
SSM<-sum((x%*%beta-mean(y))^2)
MSE<-SSE/df.e
beta.var<-diag(MSE*solve(t(x)%*%x))
t<-beta/sqrt(beta.var)
print(t)
p<-(1-pt(abs(t),df.e))*2
r.sq<-1-SSE/SST
p.partial<-NULL
for(i in 1:df.m){
#build reduced model, comare with full model
x.r<-x[,-i]
beta.r<-solve(t(x.r)%*%x.r)%*%t(x.r)%*%y
e.r<-y-x.r%*%beta.r
df.er<-nrow(x.r)-ncol(x.r)
df.mr<-ncol(x.r)-1
SSE.r<-sum(e.r^2)
SSM.r<-sum((x.r%*%beta.r-mean(y))^2)
f<-((SSM-SSM.r)/1)/MSE
p.partial[i]<-1-pf(abs(f),df1 = 1,df2 = df.e)
}
return(list(beta,sqrt(beta.var),t,p,p.partial,c(SSE,SST,SSM),r.sq,e))
}
y<-data71[,4]
x<-data71[,1:3]
fit<-linear.regression.multi(y,x)
fit.check<-lm(Bodyfat~Triceps+Thigh+Midarm,data71)
print("Model Parameter")
print(fit[[1]])
print("Standard Error")
print(fit[[2]])
print("t-Statistics")
print(fit[[3]])
print("P-value")
print(fit[[4]])
print("R-Square")
print(fit[[7]])
y<-data71[,4]
x<-data71[,1]
fit2<-linear.regression.multi(y,x)
fit2.check<-lm(Bodyfat~Triceps,data71)
print("Model Parameter")
print(fit2[[1]])
print("Standard Error")
print(fit2[[2]])
print("t-Statistics")
print(fit2[[3]])
print("P-value")
print(fit2[[4]])
print("R-Square")
print(fit2[[7]])
SSE.f<-fit[[6]][1]
SSE.r<-fit2[[6]][1]
f<-((SSE.r-SSE.f)/2)/(SSE.f/16)
p<-1-pf(f,df1 = 2,df2 = 16)
print(p)
#use anova to double check
anova(fit.check,fit2.check)
y<-data71[[4]]
x<-data71[[1]]
x.new<-ifelse(x<19,0,ifelse(x<21,1,ifelse(x<23,2,ifelse(x<25,3,ifelse(x<27,4,ifelse(x<29,5,ifelse(x<31,6,7)))))))#create 8 levels of x
d<-data.frame(x.new,y)
d$x.new<-as.factor(d$x.new)
d<-left_join(d,d%>%group_by(x.new)%>%summarise(y_hat=mean(y)))
sse.f<-sum((d$y-d$y_hat)^2)#SSE of Full model
model<-lm(y~x.new)
pureErrorAnova(model)#check if SSE.f is correct
?pureErrorAnova
??pureErrorAnova
sse.r<-fit2[[6]][1]#SSE of reduced model
f<-((sse.r-sse.f)/((20-2)-(20-8)))/(sse.f/(20-8))#n = 20, c = 8, p = 2
p<-1-pf(f,df1 = 6,df2 = 12)
print(p)
linear.regression.multi<-function(y,x){
# create data structures in matrix form
x$intercept<-rep(1,nrow(x))
x<-as.matrix(x)
y<-as.matrix(y)
# estimate parameters and the errors by least squares
beta<-solve(t(x)%*%x)%*%t(x)%*%y
e<-y-x%*%beta #residuals
# calculate quantities in the ANOVA table
df.e<-nrow(x)-ncol(x) # degree of freedom of the error
df.t<-nrow(x)-1 # degree of freedom total
df.m<-ncol(x)-1 #degree of freedom of the model
SSE<-sum(e^2)
SST<-sum((y-mean(y))^2)
SSM<-sum((x%*%beta-mean(y))^2)
MSE<-SSE/df.e
# test null hypothesis: beta_j=0, given other variables
beta.var<-diag(MSE*solve(t(x)%*%x))
t<-beta/sqrt(beta.var)
print(t)
p<-(1-pt(abs(t), df.e))*2
r.sq<-1-SSE/SST
return(list(beta,sqrt(beta.var),t,p,c(SSE,SST,SSM),r.sq,e))
}
y<-data71[,4]
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(ggplot2)
library(dplyr)
data71 <- fread("http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%20%207%20Data%20Sets/CH07TA01.txt")
colnames(data71)<-c("Triceps","Thigh","Midarm","Bodyfat")
linear.regression.multi<-function(y,x){
# create data structures in matrix form
x$intercept<-rep(1,nrow(x))
x<-as.matrix(x)
y<-as.matrix(y)
# estimate parameters and the errors by least squares
beta<-solve(t(x)%*%x)%*%t(x)%*%y
e<-y-x%*%beta #residuals
# calculate quantities in the ANOVA table
df.e<-nrow(x)-ncol(x) # degree of freedom of the error
df.t<-nrow(x)-1 # degree of freedom total
df.m<-ncol(x)-1 #degree of freedom of the model
SSE<-sum(e^2)
SST<-sum((y-mean(y))^2)
SSM<-sum((x%*%beta-mean(y))^2)
MSE<-SSE/df.e
# test null hypothesis: beta_j=0, given other variables
beta.var<-diag(MSE*solve(t(x)%*%x))
t<-beta/sqrt(beta.var)
print(t)
p<-(1-pt(abs(t), df.e))*2
r.sq<-1-SSE/SST
return(list(beta,sqrt(beta.var),t,p,c(SSE,SST,SSM),r.sq,e))
}
y<-data71[,4]
x<-data71[,1:3]
fit<-linear.regression.multi(y,x)
fit.check<-lm(Bodyfat~Triceps+Thigh+Midarm,data71)
print("Model Parameter")
print(fit[[1]])
print("Standard Error")
print(fit[[2]])
print("t-Statistics")
print(fit[[3]])
print("P-value")
print(fit[[4]])
print("R-Square")
print(fit[[7]])
fit2
y<-data71[,4]
x<-data71[,1]
fit2<-linear.regression.multi(y,x)
fit2
fit2$Bodyfat
e.y<-fit2[[7]]
y<-data71[,2]
data71
summary(lm(Bodyfat~Triceps+Thigh+Midarm, data=data71))
x
x<-data71[,1:3]
x
as.matrix(cbind(rep(1,nrow(x)), x))
ls()
y <- as.matrix(y)
#intercept point addition to x matrix and move it to the first column
x <- mutate(x,intercept=1) %>% select(intercept, everything()) %>% as.matrix()
# multiply X'Y and the inverse of X'X and calculate coeffs
b <- solve(crossprod(x)) %*% crossprod(x, y)
triceps <- c(19.5,24.7,30.7,29.8,19.1,25.6,31.4,27.9,22.1,25.5,31.1,30.4,18.7,19.7,14.6,29.5,27.7,30.2,22.7,25.2)
thigh <-   c(43.1,49.8,51.9,54.3,42.2,53.9,58.5,52.1,49.9,53.5,56.6,56.7,46.5,44.2,42.7,54.4,55.3,58.6,48.2,51)
midarm <-  c(29.1,28.2,37,31.1,30.9,23.7,27.6,30.6,23.2,24.8,30,28.3,23,28.6,21.3,30.1,25.7,24.6,27.1,27.5)
body_fat <-c(11.9,22.8,18.7,20.1,12.9,21.7,27.1,25.4,21.3,19.3,25.4,27.2,11.7,17.8,12.8,23.9,22.6,25.4,14.8,21.1)
x1 <- data.frame(triceps,thigh,midarm)
x <- data.frame(triceps,thigh,midarm)
y <- body_fat
#-------------------
y <- as.matrix(y)
#intercept point addition to x matrix and move it to the first column
x <- mutate(x,intercept=1) %>% select(intercept, everything()) %>% as.matrix()
# multiply X'Y and the inverse of X'X and calculate coeffs
b <- solve(crossprod(x)) %*% crossprod(x, y)
b
k <- 3 #k number of predictive varibles
p <- k + 1 #with 1 intercept
n <- length(x)
fity <- x %*% b
fity
resid_mat <- y - fity
resid_mat
sse <- sum(resid_mat^2)
sse
mse <- sse/(n-p)
mse
sqrt(mse)
sst <- crossprod(y) - sum(y)^2/n
ssr <- sst - sse
msr <- ssr/(k)
f_critical <- msr/mse
R2 <- 1 - sse / sst
R2
sst <- crossprod(y) - sum(y)^2/n
ssr <- sst - sse
msr <- ssr/(k)
f_critical <- msr/mse
R2 <- 1 - sse / sst
mse
summary(resid_mat)
sse <- crossprod(resid_mat)
mse <- sse/(n-p)
sst <- crossprod(y - mean(y))
ssr <- sst - sse
msr <- ssr/(k)
f_critical <- msr/mse
R2 <- 1 - sse / sst
R2
